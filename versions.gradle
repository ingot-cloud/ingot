def deps = [:]
def versions = [:]
versions.spring_boot = "2.7.12"
versions.spring_cloud = "2021.0.7"
versions.spring_cloud_alibaba = "2021.0.5.0"
versions.spring_authorization_server = "0.4.3"

versions.alibaba_druid = "1.2.9"
versions.alibaba_transmittable_thread_local = "2.11.5"
versions.swagger = "3.0.0"
versions.commons_lang = "3.3.2"
versions.commons_io = "2.4"
versions.mapstruct = "1.4.1.Final"
versions.jackson = "2.13.4"
versions.mybatis_plus = "3.5.3.1"
versions.mysql_connector = "8.0.31"
versions.hutool = "5.8.20"
versions.redisson = "3.18.1"
versions.minio = "8.4.6"
versions.aj_captcha = "1.3.0"

def spring = [:]
def spring_boot = [:]
def spring_cloud = [:]

spring_boot.dependencies = "org.springframework.boot:spring-boot-dependencies:${versions.spring_boot}"
spring_boot.plugin = "org.springframework.boot:spring-boot-gradle-plugin:${versions.spring_boot}"
spring_boot.test = "org.springframework.boot:spring-boot-starter-test"
spring_boot.data_redis_starter = "org.springframework.boot:spring-boot-starter-data-redis"
spring_boot.data_redis_reactive_starter = "org.springframework.boot:spring-boot-starter-data-redis-reactive"
spring_boot.configuration_processor = "org.springframework.boot:spring-boot-configuration-processor"
spring_boot.web_starter = "org.springframework.boot:spring-boot-starter-web"
spring_boot.webflux_starter = "org.springframework.boot:spring-boot-starter-webflux"
spring_boot.security_starter = "org.springframework.boot:spring-boot-starter-security"
spring_boot.jdbc_starter = "org.springframework.boot:spring-boot-starter-jdbc"
spring_boot.mail_starter = "org.springframework.boot:spring-boot-starter-mail"
spring_boot.freemarker_starter = "org.springframework.boot:spring-boot-starter-freemarker"
spring_boot.thymeleaf_starter = "org.springframework.boot:spring-boot-starter-thymeleaf"
spring_boot.spring_boot_autoconfigure = "org.springframework.boot:spring-boot-autoconfigure"
spring_boot.cache_starter = "org.springframework.boot:spring-boot-starter-cache"
spring_boot.undertow_starter = "org.springframework.boot:spring-boot-starter-undertow"
spring_boot.actuator_starter = "org.springframework.boot:spring-boot-starter-actuator"
spring_boot.actuator_autoconfigure = "org.springframework.boot:spring-boot-actuator-autoconfigure"
spring_boot.validation_starter = "org.springframework.boot:spring-boot-starter-validation"

spring_cloud.dependencies = "org.springframework.cloud:spring-cloud-dependencies:${versions.spring_cloud}"
spring_cloud.openfeign_starter = "org.springframework.cloud:spring-cloud-starter-openfeign"
spring_cloud.loadbalancer_starter = "org.springframework.cloud:spring-cloud-starter-loadbalancer"
spring_cloud.gateway_starter = "org.springframework.cloud:spring-cloud-starter-gateway"
spring_cloud.config_starter = "org.springframework.cloud:spring-cloud-starter-config"
spring_cloud.config_server = "org.springframework.cloud:spring-cloud-config-server"
spring_cloud.bus_amqp_start = "org.springframework.cloud:spring-cloud-starter-bus-amqp"
spring_cloud.zipkin_starter = "org.springframework.cloud:spring-cloud-starter-zipkin"
spring_cloud.bootstrap_starter = "org.springframework.cloud:spring-cloud-starter-bootstrap"
spring_cloud.commons = "org.springframework.cloud:spring-cloud-commons"
spring_cloud.context = "org.springframework.cloud:spring-cloud-context"

// security
spring.security_config = "org.springframework.security:spring-security-config"
spring.security_core = "org.springframework.security:spring-security-core"
spring.security_web = "org.springframework.security:spring-security-web"
spring.security_oauth2_authorization_server = "org.springframework.security:spring-security-oauth2-authorization-server:${versions.spring_authorization_server}"
spring.security_oauth2_core = 'org.springframework.security:spring-security-oauth2-core'
spring.security_oauth2_jose = 'org.springframework.security:spring-security-oauth2-jose'
spring.security_oauth2_resource_server = 'org.springframework.security:spring-security-oauth2-resource-server'

spring.framework_spring_web = "org.springframework:spring-web"
spring.framework_spring_webflux = "org.springframework:spring-webflux"
spring.framework_spring_core = "org.springframework:spring-core"
spring.framework_spring_beans = "org.springframework:spring-beans"
spring.framework_webmvc = "org.springframework:spring-webmvc"
spring.framework_context = "org.springframework:spring-context"
spring.framework_jdbc = "org.springframework:spring-jdbc"

spring.spring_boot = spring_boot
spring.spring_cloud = spring_cloud
deps.spring = spring

def alibaba = [:]
alibaba.cloud_dependencies = "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${versions.spring_cloud_alibaba}"
alibaba.nacos_config_starter = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config"
alibaba.nacos_discovery_starter = "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"
alibaba.sentinel_starter = "com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel"
alibaba.sentinel_gateway = "com.alibaba.cloud:spring-cloud-alibaba-sentinel-gateway"
alibaba.druid_spring_boot_starter = "com.alibaba:druid-spring-boot-starter:${versions.alibaba_druid}"
alibaba.druid = "com.alibaba:druid:${versions.alibaba_druid}"
alibaba.transmittable_thread_local = "com.alibaba:transmittable-thread-local:${versions.alibaba_transmittable_thread_local}"
deps.alibaba = alibaba

def google = [:]
google.jsr305 = "com.google.code.findbugs:jsr305:3.0.2"
google.guava = "com.google.guava:guava:31.1-jre"
deps.google = google

def swagger = [:]
swagger.springfox_swagger2 = "io.springfox:springfox-swagger2:${versions.swagger}"
swagger.springfox_swagger_ui = "io.springfox:springfox-swagger-ui:${versions.swagger}"
swagger.didispace_swagger_butler_core = "com.didispace:swagger-butler-core:1.2.0"
swagger.bootstrap_ui = "com.github.xiaoymin:swagger-bootstrap-ui:1.9.4"
deps.swagger = swagger

def apache = [:]
apache.commons_collections4 = "org.apache.commons:commons-collections4:4.2"
apache.commons_lang3 = "org.apache.commons:commons-lang3:${versions.commons_lang}"
apache.commons_io = "commons-io:commons-io:${versions.commons_io}"
apache.common_codec = "commons-codec:commons-codec:1.11"
apache.commons_exec = "org.apache.commons:commons-exec:1.3"
apache.curator_recipes = "org.apache.curator:curator-recipes:4.2.0"
apache.zookeeper = "org.apache.zookeeper:zookeeper:3.4.13"
deps.apache = apache

def mybatis = [:]
mybatis.plus_starter = "com.baomidou:mybatis-plus-boot-starter:${versions.mybatis_plus}"
mybatis.plus_extension = "com.baomidou:mybatis-plus-extension:${versions.mybatis_plus}"
mybatis.plus_core = "com.baomidou:mybatis-plus-core:${versions.mybatis_plus}"
mybatis.plus_generator = "com.baomidou:mybatis-plus-generator:${versions.mybatis_plus}"
deps.mybatis = mybatis

def mysql = [:]
mysql.connector = "com.mysql:mysql-connector-j:${versions.mysql_connector}"
deps.mysql = mysql

def mapstruct = [:]
mapstruct.library = "org.mapstruct:mapstruct:${versions.mapstruct}"
mapstruct.processor = "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
deps.mapstruct = mapstruct

def codecentric = [:]
codecentric.spring_boot_admin_starter_client = "de.codecentric:spring-boot-admin-starter-client:2.1.6"
codecentric.spring_boot_admin_starter_server = "de.codecentric:spring-boot-admin-starter-server:2.1.6"
deps.codecentric = codecentric

def log = [:]
log.logstash_logback_encoder = "net.logstash.logback:logstash-logback-encoder:5.2"
log.logback_classic = "ch.qos.logback:logback-classic:1.2.3"
deps.log = log

def jetty = [:]
jetty.server = "org.eclipse.jetty:jetty-server:9.2.26.v20180806"
jetty.util = "org.eclipse.jetty:jetty-util:9.2.26.v20180806"
jetty.http = "org.eclipse.jetty:jetty-http:9.2.26.v20180806"
jetty.io = "org.eclipse.jetty:jetty-io:9.2.26.v20180806"
jetty.client = "org.eclipse.jetty:jetty-client:9.2.26.v20180806"
deps.jetty = jetty

def jackson = [:]
jackson.annotation = "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
jackson.data_bind = "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
jackson.jsr310 = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}"
deps.jackson = jackson

def aspectj = [:]
aspectj.aspectjweaver = "org.aspectj:aspectjweaver:1.8.13"
deps.aspectj = aspectj

deps.perf4j = "org.perf4j:perf4j:0.9.16"
deps.redisson = "org.redisson:redisson:${versions.redisson}"
deps.minio = "io.minio:minio:${versions.minio}"
deps.hutool = "cn.hutool:hutool-all:${versions.hutool}"
deps.aj_captcha = "com.anji-plus:captcha:${versions.aj_captcha}"
deps.aj_captcha_starter = "com.anji-plus:spring-boot-starter-captcha:${versions.aj_captcha}"
deps.feign_okhttp = "io.github.openfeign:feign-okhttp:10.10.1"
deps.lombok = "org.projectlombok:lombok:1.18.16"
deps.jasypt = "com.github.ulisesbocchio:jasypt-spring-boot-starter:2.1.1"
deps.xxl_rpc_core = "com.xuxueli:xxl-rpc-core:1.4.1"
deps.kaptcha = "com.github.penggle:kaptcha:2.3.2"
deps.quartz = "org.quartz-scheduler:quartz:2.3.0"
deps.hazelcast = "com.hazelcast:hazelcast:3.7.8"
deps.jolokia_core = "org.jolokia:jolokia-core:1.5.0"
deps.freemarker = "org.freemarker:freemarker:2.3.31"
deps.javax_servlet_api = "javax.servlet:javax.servlet-api:4.0.1"
deps.java_validation_api = "javax.validation:validation-api:2.0.1.Final"
deps.user_agent_utils = "eu.bitwalker:UserAgentUtils:1.20"
deps.rx_java = "io.reactivex.rxjava3:rxjava:3.0.7"
deps.ltgt_apt_plugin = "net.ltgt.gradle:gradle-apt-plugin:0.21"
deps.transmode_gradle_docker = "se.transmode.gradle:gradle-docker:1.2"
deps.groovy = "org.codehaus.groovy:groovy:2.5.7"
deps.netty = "io.netty:netty-all:4.1.55.Final"

def plugins = [:]
plugins.ingot_mybatis = "com.ingot:ingot-mybatisplus-plugin:0.1.0"
plugins.ingot_assemble = "com.ingot:ingot-assemble-plugin:0.3.0"
deps.plugins = plugins

ext.deps = deps

ext.sourceCompatibilityVersion = JavaVersion.VERSION_1_8
ext.targetCompatibilityVersion = JavaVersion.VERSION_1_8

def static addRepos(RepositoryHandler handler) {
    handler.mavenCentral()
    handler.maven {
        url "https://repo.spring.io/milestone"
    }
    handler.maven {
        url "https://plugins.gradle.org/m2/"
    }
    handler.maven {
        url "http://maven.aliyun.com/nexus/content/groups/public"
        allowInsecureProtocol = true
    }
    handler.maven {
        url "https://nexus.wangchao.im/repository/maven-public/"
        credentials {
            username = "pub"
            password = "pub"
        }
    }
}

ext.addRepos = this.&addRepos